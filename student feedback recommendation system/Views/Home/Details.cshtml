@*@model List<student_feedback_recommendation_system.Models.Review>
@{
    int teacherId = (int)ViewBag.TeacherId;
}
<!DOCTYPE html>
<html>
<head>
    <title>Teacher Reviews</title>
    <!-- Add your CSS styles as needed -->
    <style>
        /* Your CSS styles */
    </style>
</head>
<body>
      <a href="@Url.Action("GetReview", "Home", new { id = teacherId})">Give review to this teacher</a>

    <h1>Teacher Reviews</h1>

    @if (Model != null && Model.Any())
    {
            <ul>
            @foreach (var review in Model)
            {
                        <li>
                            <h1>@review.Id</h1>
                            <p>Rating: @review.Rating</p>
                            <p>Comment: @review.Comment</p>
                            <p>Date Posted: @review.DatePosted.ToShortDateString()</p>
                        </li>
            }
            </ul>
    }
    else
    {
            <p>No reviews available for this teacher.be a first to give review</p>
    }


</body>
</html>
*@
@model List<student_feedback_recommendation_system.Models.Review>
@{
    int teacherId = (int)ViewBag.TeacherId;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <title>Teacher Reviews</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" />

    <style>
        body {
            background-color: #f8f9fa;
            padding: 20px;
        }

        .review-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .review-card {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .review-card h1 {
            color: #007bff;
        }
        .rate{
            display:flex;
            flex-direction:row;
            justify-content:space-between;
        }
    </style>

    <script>
        // JavaScript function to generate random background color
        function GetRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }
    </script>
</head>
<body>

    <a href="@Url.Action("GetReview", "Home", new { id = teacherId})" class="btn btn-primary mb-3">Give review to this teacher</a>

    <h1 class="mb-4">Teacher Reviews</h1>

    @if (Model != null && Model.Any())
    {
            <div class="review-container">
            @foreach (var review in Model)
            {
                        <div class="review-card" style="background-color:pink">
                            <div class="rate">
                                <div>
                    @for (int i = 0; i < review.Rating; i++)
                    {
                                    <i class="fas fa-star"></i>


                    }      
                    </div>
                               <p> @review.DatePosted.ToString("MMMM dd, yyyy h:mm tt")</p>

                    </div>
                    <p>@review.Comment</p>
                        </div>
            }
            </div>
    }
    else
    {
            <p>No reviews available for this teacher. Be the first to give a review.</p>
    }

   </body>
</html>
